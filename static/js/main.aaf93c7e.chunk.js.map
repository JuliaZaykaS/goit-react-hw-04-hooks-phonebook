{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","ContactForm","onSubmit","useState","name","setName","number","setNumber","onChangeInput","e","currentTarget","value","form","preventDefault","label","input","type","pattern","required","onChange","button","ContactList","contacts","onBtnClick","contactList","map","id","contactItem","contactInfo","onClick","Filter","filter","onFindName","filterInput","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","newContact","uuidv4","find","contact","alert","normalizedFilteredName","toLowerCase","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaf93c7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1joxC\",\"label\":\"ContactForm_label__2JMoB\",\"input\":\"ContactForm_input__JeHKK\",\"button\":\"ContactForm_button__3Hifb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1nWu0\",\"contactItem\":\"ContactList_contactItem__3XopI\",\"contactInfo\":\"ContactList_contactInfo__20JXZ\",\"button\":\"ContactList_button__3Ws6V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3SQ2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1NKqV\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onChangeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'number':\r\n        return setNumber(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmitContact = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitContact}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={onChangeInput}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={onChangeInput}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// import { Component } from \"react\";\r\n// import s from './ContactForm.module.css';\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   onChangeInput = (e) => {\r\n//     const { name, value } = e.currentTarget;\r\n//     this.setState({\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   onSubmitContact = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n//     this.setState({ name: \"\", number: \"\" });\r\n\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <form className={s.form} onSubmit={this.onSubmitContact}>\r\n//         <label className={s.label}>\r\n//           Name\r\n//           <input\r\n//           className={s.input}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//             required\r\n//             value={this.state.name}\r\n//             onChange={this.onChangeInput}\r\n//           />\r\n//         </label>\r\n//         <label className={s.label}>\r\n//           Number\r\n//           <input\r\n//             className={s.input}\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//             required\r\n//             value={this.state.number}\r\n//             onChange={this.onChangeInput}\r\n//           />\r\n//         </label>\r\n//         <button className={s.button} type=\"submit\">Add contact</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onBtnClick }) {\r\n  return (\r\n      <ol className={s.contactList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.contactItem} key={id}>\r\n            <span className={s.contactInfo}>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onBtnClick(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ filter, onFindName }) {\r\n  return (\r\n    <>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onFindName}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Section from '../Section/Section';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [],\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContactToList = (name, number) => {\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const doubleContact = contacts.find(\r\n      contact => contact.name === newContact.name,\r\n    );\r\n\r\n    !doubleContact\r\n      ? setContacts([...contacts, newContact])\r\n      : alert(`${name} is already in contacts`);\r\n  };\r\n\r\n  const findName = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    const normalizedFilteredName = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilteredName),\r\n    );\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Section title={'Phonebook'}>\r\n        <ContactForm onSubmit={addContactToList} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onFindName={findName} />\r\n        <ContactList\r\n          contacts={getFilteredContacts()}\r\n          onBtnClick={deleteContact}\r\n        />\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import { Component } from \"react\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import Section from \"../Section/Section\";\r\n// import ContactForm from \"../ContactForm/ContactForm\";\r\n// import ContactList from \"../ContactList/ContactList\";\r\n// import Filter from \"../Filter/Filter\";\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     contacts: [],\r\n//     filter: \"\",\r\n//   };\r\n\r\n//   componentDidUpdate(prevState) {\r\n//     const prevContacts = prevState.contacts;\r\n//     const nextContacts = this.state.contacts;\r\n//     if (prevContacts !== nextContacts) {\r\n//        localStorage.setItem('contacts', JSON.stringify(nextContacts))\r\n//     }\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const contactsFromLocal = JSON.parse(localStorage.getItem('contacts'));\r\n//     if (contactsFromLocal) {\r\n//       this.setState({ contacts: contactsFromLocal })\r\n//     }\r\n\r\n//   }\r\n\r\n//   addContactToList = (name, number) => {\r\n//     const newContact = {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     };\r\n\r\n//     const doubleContact = this.state.contacts.find(\r\n//       (contact) => contact.name === newContact.name\r\n//     );\r\n\r\n//     !doubleContact\r\n//       ? this.setState(({ contacts }) => ({\r\n//           contacts: [...contacts, newContact],\r\n//         }))\r\n//       : alert(`${name} is already in contacts`);\r\n//   };\r\n\r\n//   findName = (e) => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   getFilteredContacts() {\r\n//     const { contacts, filter } = this.state;\r\n//     const normalizedFilteredName = filter.toLowerCase();\r\n\r\n//     return contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalizedFilteredName)\r\n//     );\r\n//   }\r\n\r\n//   deleteContact = (contactId) => {\r\n//     this.setState((prevState) => ({\r\n//       contacts: prevState.contacts.filter(\r\n//         (contact) => contact.id !== contactId\r\n//       ),\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const contactsToRender = this.getFilteredContacts();\r\n//     return (\r\n//       <div>\r\n//         <Section title={\"Phonebook\"}>\r\n//           <ContactForm onSubmit={this.addContactToList} />\r\n//           <h2>Contacts</h2>\r\n//           <Filter value={this.state.filter} onFindName={this.findName} />\r\n\r\n//           <ContactList\r\n//             contacts={contactsToRender}\r\n//             onBtnClick={this.deleteContact}\r\n//           />\r\n\r\n//         </Section>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}